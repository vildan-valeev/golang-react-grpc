// @generated by protobuf-ts 2.8.3
// @generated from protobuf file "api.proto" (package "generated", syntax proto3)
// tslint:disable
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { APIService } from "./api";
import type { PostList } from "./api";
import type { PostID } from "./api";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { Empty } from "./api";
import type { Post } from "./api";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * @generated from protobuf service generated.APIService
 */
export interface IAPIServiceClient {
    /**
     * Создание
     *
     * @generated from protobuf rpc: CreatePost(generated.Post) returns (generated.Empty);
     */
    createPost(input: Post, options?: RpcOptions): UnaryCall<Post, Empty>;
    /**
     * Получение записи
     *
     * @generated from protobuf rpc: GetPostDetail(generated.PostID) returns (generated.Post);
     */
    getPostDetail(input: PostID, options?: RpcOptions): UnaryCall<PostID, Post>;
    /**
     * Список
     *
     * @generated from protobuf rpc: GetPostList(generated.Empty) returns (generated.PostList);
     */
    getPostList(input: Empty, options?: RpcOptions): UnaryCall<Empty, PostList>;
    /**
     * Удаление
     *
     * @generated from protobuf rpc: DeletePost(generated.PostID) returns (generated.Empty);
     */
    deletePost(input: PostID, options?: RpcOptions): UnaryCall<PostID, Empty>;
}
/**
 * @generated from protobuf service generated.APIService
 */
export class APIServiceClient implements IAPIServiceClient, ServiceInfo {
    typeName = APIService.typeName;
    methods = APIService.methods;
    options = APIService.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * Создание
     *
     * @generated from protobuf rpc: CreatePost(generated.Post) returns (generated.Empty);
     */
    createPost(input: Post, options?: RpcOptions): UnaryCall<Post, Empty> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<Post, Empty>("unary", this._transport, method, opt, input);
    }
    /**
     * Получение записи
     *
     * @generated from protobuf rpc: GetPostDetail(generated.PostID) returns (generated.Post);
     */
    getPostDetail(input: PostID, options?: RpcOptions): UnaryCall<PostID, Post> {
        const method = this.methods[1], opt = this._transport.mergeOptions(options);
        return stackIntercept<PostID, Post>("unary", this._transport, method, opt, input);
    }
    /**
     * Список
     *
     * @generated from protobuf rpc: GetPostList(generated.Empty) returns (generated.PostList);
     */
    getPostList(input: Empty, options?: RpcOptions): UnaryCall<Empty, PostList> {
        const method = this.methods[2], opt = this._transport.mergeOptions(options);
        return stackIntercept<Empty, PostList>("unary", this._transport, method, opt, input);
    }
    /**
     * Удаление
     *
     * @generated from protobuf rpc: DeletePost(generated.PostID) returns (generated.Empty);
     */
    deletePost(input: PostID, options?: RpcOptions): UnaryCall<PostID, Empty> {
        const method = this.methods[3], opt = this._transport.mergeOptions(options);
        return stackIntercept<PostID, Empty>("unary", this._transport, method, opt, input);
    }
}
